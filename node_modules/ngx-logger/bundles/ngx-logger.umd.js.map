{"version":3,"file":"ngx-logger.umd.js","sources":["../../../src/lib/config/iconfig.ts","../../../src/lib/config/config-engine.ts","../../../src/lib/config/iconfig-engine-factory.ts","../../../src/lib/config/config-engine-factory.ts","../../../src/lib/mapper/imapper.service.ts","../../../src/lib/mapper/mapper.service.ts","../../../src/lib/metadata/imetadata.service.ts","../../../src/lib/metadata/metadata.service.ts","../../../src/lib/monitor/logger-monitor.ts","../../../src/lib/rules/irules.service.ts","../../../src/lib/rules/rules.service.ts","../../../src/lib/server/iserver.service.ts","../../../src/lib/server/server.service.ts","../../../src/lib/writer/iwriter.service.ts","../../../node_modules/tslib/tslib.es6.js","../../../src/lib/types/logger-level.enum.ts","../../../src/lib/writer/color-scheme.ts","../../../src/lib/writer/writer.service.ts","../../../src/lib/logger.service.ts","../../../src/lib/custom-logger.service.ts","../../../src/lib/logger.module.ts","../../../src/public_api.ts","../../../src/ngx-logger.ts"],"sourcesContent":["import { HttpHeaders, HttpParams } from \"@angular/common/http\";\r\nimport { NgxLoggerLevel } from \"../types/logger-level.enum\";\r\nimport { NGXLoggerColorScheme } from \"../writer/color-scheme\";\r\n\r\n/**\r\n * Injection token of logger config\r\n */\r\nexport const TOKEN_LOGGER_CONFIG = 'TOKEN_LOGGER_CONFIG';\r\n\r\n/**\r\n * Interface that defines logger config data\r\n * You can use your own logger config as long as it implements this interface\r\n */\r\nexport interface INGXLoggerConfig {\r\n  // Global config\r\n  /** Minimum level to be written */\r\n  level: NgxLoggerLevel;\r\n\r\n  // metadata-service config\r\n  /** Timestamp format: any format accepted by Angular DatePipe. Defaults to ISOString. If set you need to provide DatePipe from @angular/common */\r\n  timestampFormat?: string;\r\n\r\n  // rule-service config\r\n  /** If true the console logging won't be called */\r\n  disableConsoleLogging?: boolean;\r\n\r\n  // mapper-service config\r\n  /* If true, the logger will download sourcemaps to compute the file details */\r\n  enableSourceMaps?: boolean;\r\n  /** Number of calls that will be ignored when trying to get line of stacktrace */\r\n  proxiedSteps?: number;\r\n\r\n  // writer-service config\r\n  /** Defines the color to use depending on log level */\r\n  colorScheme?: NGXLoggerColorScheme;\r\n  /** If true the console log won't include file details (filename, line number and column number) */\r\n  disableFileDetails?: boolean;\r\n\r\n  // server-service config\r\n  /** Minimum level to be sent to server */\r\n  serverLogLevel?: NgxLoggerLevel;\r\n  /** URL used to send log to server */\r\n  serverLoggingUrl?: string;\r\n  /** If true, adds \"withCredentials\" options when sending log to server */\r\n  withCredentials?: boolean;\r\n  /** Http params that will be used when sending log to server */\r\n  customHttpParams?: HttpParams,\r\n  /** Http headers that will be used when sending log to server */\r\n  customHttpHeaders?: HttpHeaders,\r\n  /** Response type that will be used when sending log to server (defaults to json) */\r\n  httpResponseType?: \"arraybuffer\" | \"blob\" | \"text\" | \"json\";\r\n}\r\n","import { NgxLoggerLevel } from './../types/logger-level.enum';\r\nimport { INGXLoggerConfigEngine } from './iconfig-engine';\r\nimport { INGXLoggerConfig } from './iconfig';\r\n\r\nexport class NGXLoggerConfigEngine implements INGXLoggerConfigEngine {\r\n\r\n  private config: INGXLoggerConfig;\r\n\r\n  constructor(\r\n    config: INGXLoggerConfig,\r\n  ) {\r\n    this.config = this._clone(config);\r\n  }\r\n\r\n  /** Get a readonly access to the level configured for the NGXLogger */\r\n  get level(): NgxLoggerLevel {\r\n    return this.config.level;\r\n  }\r\n\r\n  /** Get a readonly access to the serverLogLevel configured for the NGXLogger */\r\n  get serverLogLevel(): NgxLoggerLevel {\r\n    return this.config.serverLogLevel;\r\n  }\r\n\r\n  updateConfig(config: INGXLoggerConfig) {\r\n    this.config = this._clone(config);\r\n  }\r\n\r\n  getConfig(): INGXLoggerConfig {\r\n    return this._clone(this.config);\r\n  }\r\n\r\n  // TODO: This is a shallow clone, If the config ever becomes hierarchical we must make this a deep clone\r\n  private _clone(object: any) {\r\n    const cloneConfig: INGXLoggerConfig = { level: null };\r\n\r\n    Object.keys(object).forEach((key) => {\r\n      cloneConfig[key] = object[key];\r\n    });\r\n\r\n    return cloneConfig;\r\n  }\r\n}\r\n","import { INGXLoggerConfig } from \"./iconfig\";\r\nimport { INGXLoggerConfigEngine } from \"./iconfig-engine\";\r\n\r\n/**\r\n * Injection token of logger config engine factory\r\n */\r\nexport const TOKEN_LOGGER_CONFIG_ENGINE_FACTORY = 'TOKEN_LOGGER_CONFIG_ENGINE_FACTORY';\r\n\r\nexport interface INGXLoggerConfigEngineFactory {\r\n  /** Create the instance of configEngine */\r\n  provideConfigEngine(config: INGXLoggerConfig): INGXLoggerConfigEngine;\r\n}\r\n","import { INGXLoggerConfig } from \"./iconfig\";\r\nimport { NGXLoggerConfigEngine } from \"./config-engine\";\r\nimport { INGXLoggerConfigEngine } from \"./iconfig-engine\";\r\nimport { INGXLoggerConfigEngineFactory } from \"./iconfig-engine-factory\";\r\n\r\nexport class NGXLoggerConfigEngineFactory implements INGXLoggerConfigEngineFactory {\r\n\r\n  provideConfigEngine(config: INGXLoggerConfig): INGXLoggerConfigEngine {\r\n    return new NGXLoggerConfigEngine(config);\r\n  }\r\n\r\n}\r\n","import { INGXLoggerConfig } from \"../config/iconfig\";\r\nimport { INGXLoggerMetadata } from \"../metadata/imetadata\";\r\nimport { INGXLoggerLogPosition } from \"./ilog-position\";\r\nimport { Observable } from \"rxjs\";\r\n\r\n/**\r\n * Injection token of logger mapper service\r\n */\r\nexport const TOKEN_LOGGER_MAPPER_SERVICE = 'TOKEN_LOGGER_MAPPER_SERVICE';\r\n\r\nexport interface INGXLoggerMapperService {\r\n  /**\r\n   * Returns the log position of the caller\r\n   * If sourceMaps are enabled, it attemps to get the source map from the server, and use that to parse the position\r\n   * @param config \r\n   * @param metadata \r\n   * @returns \r\n   */\r\n  getLogPosition(config: INGXLoggerConfig, metadata: INGXLoggerMetadata): Observable<INGXLoggerLogPosition>;\r\n}\r\n","import { HttpBackend, HttpRequest, HttpResponse } from '@angular/common/http';\r\nimport { SourceMap } from '@angular/compiler';\r\nimport { Injectable, Optional } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError, filter, map, retry, shareReplay } from 'rxjs/operators';\r\nimport * as vlq from 'vlq';\r\nimport { INGXLoggerConfig } from '../config/iconfig';\r\nimport { INGXLoggerMetadata } from '../metadata/imetadata';\r\nimport { INGXLoggerLogPosition } from './ilog-position';\r\nimport { INGXLoggerMapperService } from './imapper.service';\r\n\r\n@Injectable()\r\nexport class NGXLoggerMapperService implements INGXLoggerMapperService {\r\n\r\n  /** cache for source maps, key is source map location, ie. 'http://localhost:4200/main.js.map' */\r\n  protected sourceMapCache: Map<string, Observable<SourceMap>> = new Map();\r\n\r\n  /** cache for specific log position, key is the dist position, ie 'main.js:339:21' */\r\n  protected logPositionCache: Map<string, Observable<INGXLoggerLogPosition>> = new Map();\r\n\r\n  constructor(\r\n    @Optional() private httpBackend: HttpBackend\r\n  ) {\r\n  }\r\n\r\n  /**\r\n   * Returns the log position of the caller\r\n   * If sourceMaps are enabled, it attemps to get the source map from the server, and use that to parse the position\r\n   * @param config \r\n   * @param metadata \r\n   * @returns \r\n   */\r\n  public getLogPosition(config: INGXLoggerConfig, metadata: INGXLoggerMetadata): Observable<INGXLoggerLogPosition> {\r\n    const stackLine = this.getStackLine(config);\r\n\r\n    // if we were not able to parse the stackLine, just return an empty Log Position\r\n    if (!stackLine) {\r\n      return of({ fileName: '', lineNumber: 0, columnNumber: 0 });\r\n    }\r\n\r\n    const logPosition = this.getLocalPosition(stackLine);\r\n\r\n    if (!config.enableSourceMaps) {\r\n      return of(logPosition);\r\n    }\r\n\r\n    const sourceMapLocation = this.getSourceMapLocation(stackLine);\r\n    return this.getSourceMap(sourceMapLocation, logPosition);\r\n  }\r\n\r\n  /**\r\n   * Get the stackline of the original caller\r\n   * @param config \r\n   * @returns null if stackline was not found\r\n   */\r\n  protected getStackLine(config: INGXLoggerConfig): string {\r\n    const error = new Error();\r\n\r\n    try {\r\n      // noinspection ExceptionCaughtLocallyJS\r\n      throw error;\r\n    } catch (e) {\r\n\r\n      try {\r\n        // Here are different examples of stacktrace \r\n\r\n        // Firefox (last line is the user code, the 4 first are ours):\r\n        // getStackLine@http://localhost:4200/main.js:358:23\r\n        // getCallerDetails@http://localhost:4200/main.js:557:44\r\n        // _log@http://localhost:4200/main.js:830:28\r\n        // debug@http://localhost:4200/main.js:652:14\r\n        // handleLog@http://localhost:4200/main.js:1158:29\r\n\r\n        // Chrome and Edge (last line is the user code):\r\n        // Error\r\n        // at Function.getStackLine (ngx-logger.js:329)\r\n        // at NGXMapperService.getCallerDetails (ngx-logger.js:528)\r\n        // at NGXLogger._log (ngx-logger.js:801)\r\n        // at NGXLogger.info (ngx-logger.js:631)\r\n        // at AppComponent.handleLog (app.component.ts:38)\r\n\r\n        let defaultProxy = 4; // We make 4 functions call before getting here\r\n        const firstStackLine = error.stack.split('\\n')[0];\r\n        if (!firstStackLine.includes('.js:')) {\r\n          // The stacktrace starts with no function call (example in Chrome or Edge)\r\n          defaultProxy = defaultProxy + 1;\r\n        }\r\n\r\n        return error.stack.split('\\n')[(defaultProxy + (config.proxiedSteps || 0))];\r\n      } catch (e) {\r\n        return null;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get position of caller without using sourceMaps\r\n   * @param stackLine \r\n   * @returns \r\n   */\r\n  protected getLocalPosition(stackLine: string): INGXLoggerLogPosition {\r\n    // strip base path, then parse filename, line, and column, stackline looks like this :\r\n    // Firefox\r\n    // handleLog@http://localhost:4200/main.js:1158:29\r\n    // Chrome and Edge\r\n    // at AppComponent.handleLog (app.component.ts:38)\r\n\r\n    const positionStartIndex = stackLine.lastIndexOf('\\/');\r\n    let positionEndIndex = stackLine.indexOf(')');\r\n    if (positionEndIndex < 0) {\r\n      positionEndIndex = undefined;\r\n    }\r\n\r\n    const position = stackLine.substring(positionStartIndex + 1, positionEndIndex);\r\n    const dataArray = position.split(':');\r\n    if (dataArray.length === 3) {\r\n      return { fileName: dataArray[0], lineNumber: +dataArray[1], columnNumber: +dataArray[2] };\r\n    }\r\n    return { fileName: 'unknown', lineNumber: 0, columnNumber: 0 };\r\n  }\r\n\r\n  private getTranspileLocation(stackLine: string): string {\r\n    // Example stackLine:\r\n    // Firefox : getStackLine@http://localhost:4200/main.js:358:23\r\n    // Chrome and Edge : at Function.getStackLine (ngx-logger.js:329)\r\n    let locationStartIndex = stackLine.indexOf('(');\r\n    if (locationStartIndex < 0) {\r\n      locationStartIndex = stackLine.lastIndexOf('@');\r\n      if (locationStartIndex < 0) {\r\n        locationStartIndex = stackLine.lastIndexOf(' ');\r\n      }\r\n    }\r\n\r\n    let locationEndIndex = stackLine.indexOf(')');\r\n    if (locationEndIndex < 0) {\r\n      locationEndIndex = undefined;\r\n    }\r\n\r\n    return stackLine.substring(locationStartIndex + 1, locationEndIndex);\r\n  }\r\n\r\n  /**\r\n   * Gets the URL of the sourcemap (the URL can be relative or absolute, it is browser dependant)\r\n   * @param stackLine \r\n   * @returns \r\n   */\r\n  protected getSourceMapLocation(stackLine: string): string {\r\n    const file = this.getTranspileLocation(stackLine);\r\n    const mapFullPath = file.substring(0, file.lastIndexOf(':'));\r\n    return mapFullPath.substring(0, mapFullPath.lastIndexOf(':')) + '.map';\r\n  }\r\n\r\n  private getMapping(sourceMap: SourceMap, position: INGXLoggerLogPosition): INGXLoggerLogPosition {\r\n    // => ';' indicates end of a line\r\n    // => ',' separates mappings in a line\r\n    // decoded mapping => [ generatedCodeColumn, sourceFileIndex, sourceCodeLine, sourceCodeColumn, nameIndex ]\r\n    let sourceFileIndex = 0,   // second field\r\n      sourceCodeLine = 0,    // third field\r\n      sourceCodeColumn = 0;  // fourth field\r\n\r\n    const lines = sourceMap.mappings.split(';');\r\n\r\n    for (let lineIndex = 0; lineIndex < lines.length; lineIndex++) {\r\n      // reset column position to 0 after each line\r\n      let generatedCodeColumn = 0;\r\n      // decode sections in line\r\n      const columns = lines[lineIndex].split(',');\r\n\r\n      for (let columnIndex = 0; columnIndex < columns.length; columnIndex++) {\r\n        const decodedSection = vlq.decode(columns[columnIndex]);\r\n        if (decodedSection.length >= 4) {\r\n          // update relative positions\r\n          generatedCodeColumn += decodedSection[0];\r\n          sourceFileIndex += decodedSection[1];\r\n          sourceCodeLine += decodedSection[2];\r\n          sourceCodeColumn += decodedSection[3];\r\n        }\r\n\r\n        // check if matching map\r\n        if (lineIndex === position.lineNumber) {\r\n          if (generatedCodeColumn === position.columnNumber) {\r\n            // matching column and line found\r\n            return { fileName: sourceMap.sources[sourceFileIndex], lineNumber: sourceCodeLine, columnNumber: sourceCodeColumn };\r\n          } else if (columnIndex + 1 === columns.length) {\r\n            // matching column not found, but line is correct\r\n            return { fileName: sourceMap.sources[sourceFileIndex], lineNumber: sourceCodeLine, columnNumber: 0 };\r\n          }\r\n        }\r\n      }\r\n    }\r\n    // failed if reached\r\n    return { fileName: 'unknown', lineNumber: 0, columnNumber: 0 };\r\n  }\r\n\r\n  /**\r\n   * does the http get request to get the source map\r\n   * @param sourceMapLocation\r\n   * @param distPosition\r\n   */\r\n  protected getSourceMap(sourceMapLocation: string, distPosition: INGXLoggerLogPosition): Observable<INGXLoggerLogPosition> {\r\n    const req = new HttpRequest<SourceMap>('GET', sourceMapLocation);\r\n    const distPositionKey = `${distPosition.fileName}:${distPosition.lineNumber}:${distPosition.columnNumber}`;\r\n\r\n    // if the specific log position is already in cache return it\r\n    if (this.logPositionCache.has(distPositionKey)) {\r\n      return this.logPositionCache.get(distPositionKey);\r\n    }\r\n\r\n    // otherwise check if the source map is already cached for given source map location\r\n    if (!this.sourceMapCache.has(sourceMapLocation)) {\r\n      if (!this.httpBackend) {\r\n        console.error('NGXLogger : Can\\'t get sourcemap because HttpBackend is not provided. You need to import HttpClientModule');\r\n        this.sourceMapCache.set(sourceMapLocation, of(null));\r\n      } else {\r\n        // obtain the source map if not cached\r\n        this.sourceMapCache.set(\r\n          sourceMapLocation,\r\n          this.httpBackend.handle(req).pipe(\r\n            filter((e) => e instanceof HttpResponse),\r\n            map<HttpResponse<SourceMap>, SourceMap>(\r\n              (httpResponse: HttpResponse<SourceMap>) => httpResponse.body\r\n            ),\r\n            retry(3),\r\n            shareReplay(1)\r\n          )\r\n        );\r\n      }\r\n    }\r\n\r\n    // at this point the source map is cached, use it to get specific log position mapping\r\n    const logPosition$ = this.sourceMapCache.get(sourceMapLocation).pipe(\r\n      map<SourceMap, INGXLoggerLogPosition>((sourceMap) => {\r\n        // sourceMap can be null if HttpBackend is not provided for example\r\n        if (!sourceMap) {\r\n          return distPosition;\r\n        }\r\n        // map generated position to source position\r\n        return this.getMapping(sourceMap, distPosition)\r\n      }),\r\n      catchError(() => of(distPosition)),\r\n      shareReplay(1)\r\n    );\r\n\r\n    // store specific log position in cache for given dest position and return it\r\n    this.logPositionCache.set(distPositionKey, logPosition$);\r\n\r\n    return logPosition$;\r\n  }\r\n}\r\n","import { INGXLoggerConfig } from \"../config/iconfig\";\r\nimport { NgxLoggerLevel } from \"../types/logger-level.enum\";\r\nimport { INGXLoggerMetadata } from \"./imetadata\";\r\n\r\n/**\r\n * Injection token of logger metadata service\r\n */\r\nexport const TOKEN_LOGGER_METADATA_SERVICE = 'TOKEN_LOGGER_METADATA_SERVICE';\r\n\r\nexport interface INGXLoggerMetadataService {\r\n  /**\r\n   * Gets the content to be logged and some metadata around it\r\n   * @param level \r\n   * @param config \r\n   * @param message \r\n   * @param additional \r\n   */\r\n  getMetadata(level: NgxLoggerLevel, config: INGXLoggerConfig, message?: any | (() => any), additional?: any[]): INGXLoggerMetadata;\r\n}\r\n","import { DatePipe } from '@angular/common';\r\nimport { Injectable, Optional } from '@angular/core';\r\nimport { NgxLoggerLevel } from '../types/logger-level.enum';\r\nimport { INGXLoggerConfig } from '../config/iconfig';\r\nimport { INGXLoggerMetadata } from './imetadata';\r\nimport { INGXLoggerMetadataService } from './imetadata.service';\r\n\r\n@Injectable()\r\nexport class NGXLoggerMetadataService implements INGXLoggerMetadataService {\r\n\r\n  constructor(\r\n    @Optional() protected readonly datePipe: DatePipe,\r\n  ) { }\r\n\r\n  protected computeTimestamp(config: INGXLoggerConfig): string {\r\n    const defaultTimestamp = () => new Date().toISOString();\r\n\r\n    if (config.timestampFormat) {\r\n      if (!this.datePipe) {\r\n        console.error('NGXLogger : Can\\'t use timeStampFormat because DatePipe is not provided. You need to provide DatePipe');\r\n        return defaultTimestamp();\r\n      } else {\r\n        return this.datePipe.transform(new Date(), config.timestampFormat);\r\n      }\r\n    }\r\n\r\n    return defaultTimestamp();\r\n  }\r\n\r\n  public getMetadata(\r\n    level: NgxLoggerLevel,\r\n    config: INGXLoggerConfig,\r\n    message?: any | (() => any),\r\n    additional?: any[],\r\n  ): INGXLoggerMetadata {\r\n    const metadata: INGXLoggerMetadata = {\r\n      level: level,\r\n      additional: additional,\r\n    };\r\n\r\n    // The user can send a function\r\n    // This is useful in order to compute string concatenation only when the log will actually be written\r\n    if (message && typeof message === 'function') {\r\n      metadata.message = message();\r\n    } else {\r\n      metadata.message = message;\r\n    }\r\n\r\n    metadata.timestamp = this.computeTimestamp(config);\r\n\r\n    return metadata;\r\n  }\r\n}\r\n","import { INGXLoggerConfig } from '../config/iconfig';\r\nimport { INGXLoggerMetadata } from '../metadata/imetadata';\r\nimport { INGXLoggerMonitor } from './ilogger-monitor';\r\n\r\n// I kept this class alive only to avoid a breaking change with the old version\r\n// This class does not implement anything so it is useless and the interface is enough\r\n\r\n/**\r\n * @deprecated this class does not implement anything thus being useless, you should rather implements @see INGXLoggerMonitor\r\n */\r\nexport abstract class NGXLoggerMonitor implements INGXLoggerMonitor {\r\n  abstract onLog(logObject: INGXLoggerMetadata, config: INGXLoggerConfig): void;\r\n}\r\n","import { INGXLoggerConfig } from \"../config/iconfig\";\r\nimport { NgxLoggerLevel } from \"../types/logger-level.enum\";\r\n\r\n/**\r\n * Injection token of logger metadata service\r\n */\r\nexport const TOKEN_LOGGER_RULES_SERVICE = 'TOKEN_LOGGER_RULES_SERVICE';\r\n\r\n/**\r\n * Service used to know if some of the feature of the logger should be used or not\r\n */\r\nexport interface INGXLoggerRulesService {\r\n  /**\r\n   * If true the logger will write logs to console\r\n   * @param level \r\n   * @param config \r\n   * @param message \r\n   * @param additional \r\n   */\r\n  shouldCallWriter(level: NgxLoggerLevel, config: INGXLoggerConfig, message?: any | (() => any), additional?: any[]): boolean;\r\n  /**\r\n   * If true the logger will send logs to server\r\n   * @param level \r\n   * @param config \r\n   * @param message \r\n   * @param additional \r\n   */\r\n  shouldCallServer(level: NgxLoggerLevel, config: INGXLoggerConfig, message?: any | (() => any), additional?: any[]): boolean;\r\n  /**\r\n   * If true the logger will call the loggerMonitor\r\n   * @param level \r\n   * @param config \r\n   * @param message \r\n   * @param additional \r\n   */\r\n  shouldCallMonitor(level: NgxLoggerLevel, config: INGXLoggerConfig, message?: any | (() => any), additional?: any[]): boolean;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { NgxLoggerLevel } from '../types/logger-level.enum';\r\nimport { INGXLoggerConfig } from '../config/iconfig';\r\nimport { INGXLoggerRulesService } from './irules.service';\r\n\r\n@Injectable()\r\nexport class NGXLoggerRulesService implements INGXLoggerRulesService {\r\n\r\n  public shouldCallWriter(level: NgxLoggerLevel, config: INGXLoggerConfig, message?: any, additional?: any[]): boolean {\r\n    return !config.disableConsoleLogging && level >= config.level;\r\n  }\r\n\r\n  public shouldCallServer(level: NgxLoggerLevel, config: INGXLoggerConfig, message?: any, additional?: any[]): boolean {\r\n    return !!config.serverLoggingUrl && level >= config.serverLogLevel;\r\n  }\r\n\r\n  public shouldCallMonitor(level: NgxLoggerLevel, config: INGXLoggerConfig, message?: any, additional?: any[]): boolean {\r\n    // The default behavior is to call the monitor only if the writer or the server is called\r\n    return this.shouldCallWriter(level, config, message, additional) || this.shouldCallServer(level, config, message, additional);\r\n  }\r\n}\r\n","import { INGXLoggerConfig } from \"../config/iconfig\";\r\nimport { INGXLoggerMetadata } from \"../metadata/imetadata\";\r\n\r\n/**\r\n * Injection token of logger server service\r\n */\r\nexport const TOKEN_LOGGER_SERVER_SERVICE = 'TOKEN_LOGGER_SERVER_SERVICE';\r\n\r\nexport interface INGXLoggerServerService {\r\n  /**\r\n   * Sends the content to be logged to the server according to the config\r\n   * @param metadata \r\n   * @param config \r\n   */\r\n  sendToServer(metadata: INGXLoggerMetadata, config: INGXLoggerConfig): void;\r\n}\r\n","import { HttpBackend, HttpHeaders, HttpParams, HttpRequest, HttpResponse } from '@angular/common/http';\r\nimport { Injectable, Optional } from '@angular/core';\r\nimport { Observable, of, throwError } from 'rxjs';\r\nimport { catchError, filter, map } from 'rxjs/operators';\r\nimport { INGXLoggerMetadata } from '../metadata/imetadata';\r\nimport { INGXLoggerConfig } from '../config/iconfig';\r\nimport { INGXLoggerServerService } from './iserver.service';\r\n\r\n@Injectable()\r\nexport class NGXLoggerServerService implements INGXLoggerServerService {\r\n\r\n  constructor(\r\n    @Optional() protected readonly httpBackend: HttpBackend,\r\n  ) { }\r\n\r\n  /**\r\n   * Transforms an error object into a readable string (taking only the stack)\r\n   * This is needed because JSON.stringify would return \"{}\"\r\n   * @param err the error object\r\n   * @returns The stack of the error\r\n   */\r\n  protected secureErrorObject(err: Error): string {\r\n    return err?.stack;\r\n  }\r\n\r\n  /**\r\n   * Transforms the additional parameters to avoid any json error when sending the data to the server\r\n   * Basically it just replaces unstringifiable object to a string mentioning an error\r\n   * @param additional The additional data to be sent\r\n   * @returns The additional data secured\r\n   */\r\n  protected secureAdditionalParameters(additional: any[]): any[] {\r\n    if (additional === null || additional === undefined) {\r\n      return null;\r\n    }\r\n\r\n    return additional.map((next, idx) => {\r\n      try {\r\n        if (next instanceof Error) {\r\n          return this.secureErrorObject(next);\r\n        }\r\n        // We just want to make sure the JSON can be parsed, we do not want to actually change the type\r\n        if (typeof next === 'object') {\r\n          JSON.stringify(next);\r\n        }\r\n\r\n        return next;\r\n      } catch (e) {\r\n        return `The additional[${idx}] value could not be parsed using JSON.stringify().`;\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Transforms the message so that it can be sent to the server\r\n   * @param message the message to be sent\r\n   * @returns the message secured\r\n   */\r\n  protected secureMessage(message: any): string {\r\n    try {\r\n      if (message instanceof Error) {\r\n        return this.secureErrorObject(message);\r\n      }\r\n\r\n      if (typeof message !== 'string') {\r\n        message = JSON.stringify(message, null, 2);\r\n      }\r\n    } catch (e) {\r\n      message = 'The provided \"message\" value could not be parsed with JSON.stringify().';\r\n    }\r\n\r\n    return message;\r\n  }\r\n\r\n  protected logOnServer<T>(\r\n    url: string,\r\n    logContent: T,\r\n    options: {\r\n      headers?: HttpHeaders;\r\n      reportProgress?: boolean;\r\n      params?: HttpParams;\r\n      responseType?: 'arraybuffer' | 'blob' | 'json' | 'text';\r\n      withCredentials?: boolean;\r\n    },\r\n  ): Observable<T> {\r\n    // HttpBackend skips all HttpInterceptors\r\n    // They may log errors using this service causing circular calls\r\n    const req = new HttpRequest<T>('POST', url, logContent, options || {});\r\n\r\n    if (!this.httpBackend) {\r\n      console.error('NGXLogger : Can\\'t log on server because HttpBackend is not provided. You need to import HttpClientModule');\r\n      return of(null);\r\n    }\r\n    return this.httpBackend.handle(req).pipe(\r\n      filter(e => e instanceof HttpResponse),\r\n      map<HttpResponse<T>, T>((httpResponse: HttpResponse<T>) => httpResponse.body)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Customise the data sent to the API\r\n   * @param metadata the data provided by NGXLogger\r\n   * @returns the data that will be sent to the API in the body\r\n   */\r\n  protected customiseRequestBody(metadata: INGXLoggerMetadata): any {\r\n    // In our API the body is not customised\r\n    return metadata;\r\n  }\r\n\r\n  public sendToServer(metadata: INGXLoggerMetadata, config: INGXLoggerConfig): void {\r\n    // Copying metadata locally because we don't want to change the object for the caller\r\n    const localMetadata = { ...metadata };\r\n\r\n    localMetadata.additional = this.secureAdditionalParameters(localMetadata.additional);\r\n\r\n    localMetadata.message = this.secureMessage(localMetadata.message);\r\n\r\n    // Allow users to customise the data sent to the API\r\n    const requestBody = this.customiseRequestBody(localMetadata);\r\n\r\n    const headers = config.customHttpHeaders || new HttpHeaders();\r\n    if (!headers.has('Content-Type')) {\r\n      headers.set('Content-Type', 'application/json');\r\n    }\r\n\r\n    this.logOnServer<any>(config.serverLoggingUrl, requestBody, {\r\n      headers,\r\n      params: config.customHttpParams || new HttpParams(),\r\n      responseType: config.httpResponseType || 'json',\r\n      withCredentials: config.withCredentials || false,\r\n    }).pipe(catchError(err => {\r\n      // Do not use NGXLogger here because this could cause an infinite loop \r\n      console.error('NGXLogger: Failed to log on server', err);\r\n      return throwError(err);\r\n    })).subscribe();\r\n  }\r\n}\r\n","import { INGXLoggerConfig } from \"../config/iconfig\";\r\nimport { INGXLoggerMetadata } from \"../metadata/imetadata\";\r\n\r\n/**\r\n * Injection token of logger writer service\r\n */\r\nexport const TOKEN_LOGGER_WRITER_SERVICE = 'TOKEN_LOGGER_WRITER_SERVICE';\r\n\r\nexport interface INGXLoggerWriterService {\r\n  /**\r\n   * Write content to the console\r\n   * @param metadata \r\n   * @param config \r\n   */\r\n  writeMessage(metadata: INGXLoggerMetadata, config: INGXLoggerConfig): void;\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","export enum NgxLoggerLevel {\r\n  TRACE = 0,\r\n  DEBUG = 1,\r\n  INFO = 2,\r\n  LOG = 3,\r\n  WARN = 4,\r\n  ERROR = 5,\r\n  FATAL = 6,\r\n  OFF = 7\r\n}\r\n","export type NGXLoggerColorScheme = [string, string, string, string, string, string, string];\r\n\r\nexport const DEFAULT_COLOR_SCHEME: NGXLoggerColorScheme = [\r\n  'purple',\r\n  'teal',\r\n  'gray',\r\n  'gray',\r\n  'red',\r\n  'red',\r\n  'red'\r\n];\r\n","import { Inject, Injectable, PLATFORM_ID } from '@angular/core';\r\nimport { INGXLoggerMetadata } from '../metadata/imetadata';\r\nimport { INGXLoggerConfig } from '../config/iconfig';\r\nimport { INGXLoggerWriterService } from './iwriter.service';\r\nimport { isPlatformBrowser } from '@angular/common';\r\nimport { NgxLoggerLevel } from '../types/logger-level.enum';\r\nimport { DEFAULT_COLOR_SCHEME } from './color-scheme';\r\n\r\n@Injectable()\r\nexport class NGXLoggerWriterService implements INGXLoggerWriterService {\r\n\r\n  protected readonly isIE: boolean;\r\n  protected readonly logFunc: (metadata: INGXLoggerMetadata, config: INGXLoggerConfig, metaString: string) => void;\r\n\r\n  constructor(\r\n    @Inject(PLATFORM_ID) protected platformId,\r\n  ) {\r\n    this.isIE = isPlatformBrowser(platformId) && navigator && navigator.userAgent &&\r\n      !!(navigator.userAgent.indexOf('MSIE') !== -1 || navigator.userAgent.match(/Trident\\//) || navigator.userAgent.match(/Edge\\//));\r\n\r\n    this.logFunc = this.isIE ? this.logIE.bind(this) : this.logModern.bind(this);\r\n  }\r\n\r\n  /** Generate a \"meta\" string that is displayed before the content sent to the log function */\r\n  protected prepareMetaString(metadata: INGXLoggerMetadata, config: INGXLoggerConfig): string {\r\n\t\tconst fileDetails = config.disableFileDetails === true ? '' : `[${metadata.fileName}:${metadata.lineNumber}:${metadata.columnNumber}]`;\r\n\r\n    return `${metadata.timestamp} ${NgxLoggerLevel[metadata.level]} ${fileDetails}`;\r\n  }\r\n\r\n  /** Get the color to use when writing to console */\r\n  protected getColor(metadata: INGXLoggerMetadata, config: INGXLoggerConfig): string | undefined {\r\n    const configColorScheme = config.colorScheme ?? DEFAULT_COLOR_SCHEME;\r\n\r\n    // this is needed to avoid a build error\r\n    if (metadata.level === NgxLoggerLevel.OFF) {\r\n      return undefined;\r\n    }\r\n    return configColorScheme[metadata.level];\r\n  }\r\n\r\n  /** Log to the console specifically for IE */\r\n  protected logIE(metadata: INGXLoggerMetadata, config: INGXLoggerConfig, metaString: string): void {\r\n\r\n    // Coloring doesn't work in IE\r\n\r\n    // make sure additional isn't null or undefined so that ...additional doesn't error\r\n    const additional = metadata.additional || [];\r\n\r\n    switch (metadata.level) {\r\n      case NgxLoggerLevel.WARN:\r\n        console.warn(`${metaString} `, metadata.message, ...additional);\r\n        break;\r\n      case NgxLoggerLevel.ERROR:\r\n      case NgxLoggerLevel.FATAL:\r\n        console.error(`${metaString} `, metadata.message, ...additional);\r\n        break;\r\n      case NgxLoggerLevel.INFO:\r\n        console.info(`${metaString} `, metadata.message, ...additional);\r\n        break;\r\n      default:\r\n        console.log(`${metaString} `, metadata.message, ...additional);\r\n    }\r\n  }\r\n\r\n  /** Log to the console */\r\n  protected logModern(metadata: INGXLoggerMetadata, config: INGXLoggerConfig, metaString: string): void {\r\n    const color = this.getColor(metadata, config);\r\n\r\n    // make sure additional isn't null or undefined so that ...additional doesn't error\r\n    const additional = metadata.additional || [];\r\n\r\n    switch (metadata.level) {\r\n      case NgxLoggerLevel.WARN:\r\n        console.warn(`%c${metaString}`, `color:${color}`, metadata.message, ...additional);\r\n        break;\r\n      case NgxLoggerLevel.ERROR:\r\n      case NgxLoggerLevel.FATAL:\r\n        console.error(`%c${metaString}`, `color:${color}`, metadata.message, ...additional);\r\n        break;\r\n      case NgxLoggerLevel.INFO:\r\n        console.info(`%c${metaString}`, `color:${color}`, metadata.message, ...additional);\r\n        break;\r\n      //  Disabling console.trace since the stack trace is not helpful. it is showing the stack trace of\r\n      // the console.trace statement\r\n      // case NgxLoggerLevel.TRACE:\r\n      //   console.trace(`%c${metaString}`, `color:${color}`, message, ...additional);\r\n      //   break;\r\n\r\n      case NgxLoggerLevel.DEBUG:\r\n        console.debug(`%c${metaString}`, `color:${color}`, metadata.message, ...additional);\r\n        break;\r\n      default:\r\n        console.log(`%c${metaString}`, `color:${color}`, metadata.message, ...additional);\r\n    }\r\n  }\r\n\r\n  /** Write the content sent to the log function to the console */\r\n  public writeMessage(metadata: INGXLoggerMetadata, config: INGXLoggerConfig): void {\r\n    const metaString = this.prepareMetaString(metadata, config);\r\n\r\n    this.logFunc(metadata, config, metaString);\r\n  }\r\n}\r\n","import { Inject, Injectable } from '@angular/core';\r\nimport { HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { NgxLoggerLevel } from './types/logger-level.enum';\r\nimport { INGXLoggerConfigEngine } from './config/iconfig-engine';\r\nimport { INGXLoggerConfig, TOKEN_LOGGER_CONFIG } from './config/iconfig';\r\nimport { INGXLoggerMetadataService, TOKEN_LOGGER_METADATA_SERVICE } from './metadata/imetadata.service';\r\nimport { INGXLoggerRulesService, TOKEN_LOGGER_RULES_SERVICE } from './rules/irules.service';\r\nimport { INGXLoggerMapperService, TOKEN_LOGGER_MAPPER_SERVICE } from './mapper/imapper.service';\r\nimport { INGXLoggerMonitor } from './monitor/ilogger-monitor';\r\nimport { INGXLoggerWriterService, TOKEN_LOGGER_WRITER_SERVICE } from './writer/iwriter.service';\r\nimport { INGXLoggerServerService, TOKEN_LOGGER_SERVER_SERVICE } from './server/iserver.service';\r\nimport { take } from 'rxjs/operators';\r\nimport { INGXLoggerConfigEngineFactory, TOKEN_LOGGER_CONFIG_ENGINE_FACTORY } from './config/iconfig-engine-factory';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NGXLogger {\r\n  private _loggerMonitor: INGXLoggerMonitor;\r\n  private configEngine: INGXLoggerConfigEngine;\r\n\r\n  constructor(\r\n    @Inject(TOKEN_LOGGER_CONFIG) config: INGXLoggerConfig,\r\n    @Inject(TOKEN_LOGGER_CONFIG_ENGINE_FACTORY) configEngineFactory: INGXLoggerConfigEngineFactory,\r\n    @Inject(TOKEN_LOGGER_METADATA_SERVICE) private metadataService: INGXLoggerMetadataService,\r\n    @Inject(TOKEN_LOGGER_RULES_SERVICE) private ruleService: INGXLoggerRulesService,\r\n    @Inject(TOKEN_LOGGER_MAPPER_SERVICE) private mapperService: INGXLoggerMapperService,\r\n    @Inject(TOKEN_LOGGER_WRITER_SERVICE) private writerService: INGXLoggerWriterService,\r\n    @Inject(TOKEN_LOGGER_SERVER_SERVICE) private serverService: INGXLoggerServerService,\r\n  ) {\r\n    this.configEngine = configEngineFactory.provideConfigEngine(config);\r\n  }\r\n\r\n  /** Get a readonly access to the level configured for the NGXLogger */\r\n  get level(): NgxLoggerLevel {\r\n    return this.configEngine.level;\r\n  }\r\n\r\n  /** Get a readonly access to the serverLogLevel configured for the NGXLogger */\r\n  get serverLogLevel(): NgxLoggerLevel {\r\n    return this.configEngine.serverLogLevel;\r\n  }\r\n\r\n  public trace(message?: any | (() => any), ...additional: any[]): void {\r\n    this._log(NgxLoggerLevel.TRACE, message, additional);\r\n  }\r\n\r\n  public debug(message?: any | (() => any), ...additional: any[]): void {\r\n    this._log(NgxLoggerLevel.DEBUG, message, additional);\r\n  }\r\n\r\n  public info(message?: any | (() => any), ...additional: any[]): void {\r\n    this._log(NgxLoggerLevel.INFO, message, additional);\r\n  }\r\n\r\n  public log(message?: any | (() => any), ...additional: any[]): void {\r\n    this._log(NgxLoggerLevel.LOG, message, additional);\r\n  }\r\n\r\n  public warn(message?: any | (() => any), ...additional: any[]): void {\r\n    this._log(NgxLoggerLevel.WARN, message, additional);\r\n  }\r\n\r\n  public error(message?: any | (() => any), ...additional: any[]): void {\r\n    this._log(NgxLoggerLevel.ERROR, message, additional);\r\n  }\r\n\r\n  public fatal(message?: any | (() => any), ...additional: any[]): void {\r\n    this._log(NgxLoggerLevel.FATAL, message, additional);\r\n  }\r\n\r\n  /** @deprecated customHttpHeaders is now part of the config, this should be updated via @see updateConfig */\r\n  public setCustomHttpHeaders(headers: HttpHeaders) {\r\n    const config = this.getConfigSnapshot();\r\n    config.customHttpHeaders = headers;\r\n    this.updateConfig(config);\r\n  }\r\n\r\n  /** @deprecated customHttpParams is now part of the config, this should be updated via @see updateConfig */\r\n  public setCustomParams(params: HttpParams) {\r\n    const config = this.getConfigSnapshot();\r\n    config.customHttpParams = params;\r\n    this.updateConfig(config);\r\n  }\r\n\r\n  /** @deprecated withCredentials is now part of the config, this should be updated via @see updateConfig */\r\n  public setWithCredentialsOptionValue(withCredentials: boolean) {\r\n    const config = this.getConfigSnapshot();\r\n    config.withCredentials = withCredentials;\r\n    this.updateConfig(config);\r\n  }\r\n\r\n  /**\r\n   * Register a INGXLoggerMonitor that will be trigger when a log is either written or sent to server\r\n   * \r\n   * There is only one monitor, registering one will overwrite the last one if there was one\r\n   * @param monitor \r\n   */\r\n  public registerMonitor(monitor: INGXLoggerMonitor) {\r\n    this._loggerMonitor = monitor;\r\n  }\r\n\r\n  /** Set config of logger\r\n   * \r\n   * Warning : This overwrites all the config, if you want to update only one property, you should use @see getConfigSnapshot before\r\n   */\r\n  public updateConfig(config: INGXLoggerConfig) {\r\n    this.configEngine.updateConfig(config);\r\n  }\r\n\r\n  /** Get config of logger */\r\n  public getConfigSnapshot(): INGXLoggerConfig {\r\n    return this.configEngine.getConfig();\r\n  }\r\n\r\n  private _log(level: NgxLoggerLevel, message?: any | (() => any), additional: any[] = []): void {\r\n    const config = this.configEngine.getConfig();\r\n\r\n    const shouldCallWriter = this.ruleService.shouldCallWriter(level, config, message, additional);\r\n    const shouldCallServer = this.ruleService.shouldCallServer(level, config, message, additional);\r\n    const shouldCallMonitor = this.ruleService.shouldCallMonitor(level, config, message, additional);\r\n\r\n    if (!shouldCallWriter && !shouldCallServer && !shouldCallMonitor) {\r\n      // If nothing is to be called we return\r\n      return;\r\n    }\r\n\r\n    const metadata = this.metadataService.getMetadata(level, config, message, additional);\r\n    this.mapperService.getLogPosition(config, metadata).pipe(take(1)).subscribe(logPosition => {\r\n      if (logPosition) {\r\n        metadata.fileName = logPosition.fileName;\r\n        metadata.lineNumber = logPosition.lineNumber;\r\n        metadata.columnNumber = logPosition.columnNumber;\r\n      }\r\n\r\n      if (shouldCallMonitor && this._loggerMonitor) {\r\n        this._loggerMonitor.onLog(metadata, config);\r\n      }\r\n      if (shouldCallWriter) {\r\n        this.writerService.writeMessage(metadata, config);\r\n      }\r\n      if (shouldCallServer) {\r\n        this.serverService.sendToServer(metadata, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { Inject, Injectable } from '@angular/core';\r\nimport { INGXLoggerConfig } from './config/iconfig';\r\nimport { NGXLogger } from './logger.service';\r\nimport { TOKEN_LOGGER_MAPPER_SERVICE, INGXLoggerMapperService } from './mapper/imapper.service';\r\nimport { TOKEN_LOGGER_METADATA_SERVICE, INGXLoggerMetadataService } from './metadata/imetadata.service';\r\nimport { TOKEN_LOGGER_RULES_SERVICE, INGXLoggerRulesService } from './rules/irules.service';\r\nimport { TOKEN_LOGGER_SERVER_SERVICE, INGXLoggerServerService } from './server/iserver.service';\r\nimport { TOKEN_LOGGER_WRITER_SERVICE, INGXLoggerWriterService } from './writer/iwriter.service';\r\nimport { INGXLoggerMonitor } from './monitor/ilogger-monitor';\r\nimport { INGXLoggerConfigEngineFactory, TOKEN_LOGGER_CONFIG_ENGINE_FACTORY } from './config/iconfig-engine-factory';\r\n\r\n// Keeping this to avoid any breaking change for now, this class should be removed later\r\n\r\n/**\r\n * CustomNGXLoggerService is designed to allow users to get a new instance of a logger\r\n * @deprecated The logger is now fully customisable so this class is now useless\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CustomNGXLoggerService {\r\n\r\n  constructor(\r\n    @Inject(TOKEN_LOGGER_CONFIG_ENGINE_FACTORY) private configEngineFactory: INGXLoggerConfigEngineFactory,\r\n    @Inject(TOKEN_LOGGER_METADATA_SERVICE) private metadataService: INGXLoggerMetadataService,\r\n    @Inject(TOKEN_LOGGER_RULES_SERVICE) private ruleService: INGXLoggerRulesService,\r\n    @Inject(TOKEN_LOGGER_MAPPER_SERVICE) private mapperService: INGXLoggerMapperService,\r\n    @Inject(TOKEN_LOGGER_WRITER_SERVICE) private writerService: INGXLoggerWriterService,\r\n    @Inject(TOKEN_LOGGER_SERVER_SERVICE) private serverService: INGXLoggerServerService,\r\n  ) { }\r\n\r\n\r\n  /**\r\n   * Create an instance of a logger\r\n   * @deprecated The logger is now fully customisable so this function is now useless, if you want a specific instance of NGXLogger, either use the new keyword or Angular dependency injection\r\n   * @param config \r\n   * @param serverService \r\n   * @param logMonitor \r\n   * @param mapperService \r\n   * @returns \r\n   */\r\n  create(\r\n    config: INGXLoggerConfig,\r\n    serverService?: INGXLoggerServerService,\r\n    logMonitor?: INGXLoggerMonitor,\r\n    mapperService?: INGXLoggerMapperService,\r\n  ): NGXLogger {\r\n    const logger = new NGXLogger(config, this.configEngineFactory, this.metadataService, this.ruleService, mapperService || this.mapperService, this.writerService, serverService || this.serverService);\r\n\r\n    if (logMonitor) {\r\n      logger.registerMonitor(logMonitor);\r\n    }\r\n\r\n    return logger;\r\n  }\r\n}\r\n\r\n\r\n","import { CommonModule } from '@angular/common';\r\nimport { ClassProvider, ConstructorProvider, ExistingProvider, FactoryProvider, ModuleWithProviders, NgModule, ValueProvider } from '@angular/core';\r\n\r\nimport { NGXLogger } from './logger.service';\r\nimport { CustomNGXLoggerService } from './custom-logger.service';\r\nimport { INGXLoggerConfig, TOKEN_LOGGER_CONFIG } from './config/iconfig';\r\nimport { NGXLoggerMapperService } from './mapper/mapper.service';\r\nimport { TOKEN_LOGGER_METADATA_SERVICE } from './metadata/imetadata.service';\r\nimport { NGXLoggerMetadataService } from './metadata/metadata.service';\r\nimport { TOKEN_LOGGER_RULES_SERVICE } from './rules/irules.service';\r\nimport { NGXLoggerRulesService } from './rules/rules.service';\r\nimport { TOKEN_LOGGER_MAPPER_SERVICE } from './mapper/imapper.service';\r\nimport { NGXLoggerWriterService } from './writer/writer.service';\r\nimport { TOKEN_LOGGER_WRITER_SERVICE } from './writer/iwriter.service';\r\nimport { NGXLoggerServerService } from './server/server.service';\r\nimport { TOKEN_LOGGER_SERVER_SERVICE } from './server/iserver.service';\r\nimport { NGXLoggerConfigEngineFactory } from './config/config-engine-factory';\r\nimport { TOKEN_LOGGER_CONFIG_ENGINE_FACTORY } from './config/iconfig-engine-factory';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n})\r\nexport class LoggerModule {\r\n  static forRoot(\r\n    config: INGXLoggerConfig | null | undefined,\r\n    customProvider?: {\r\n      configProvider?: ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider,\r\n      configEngineFactoryProvider?: ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider,\r\n      metadataProvider?: ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider,\r\n      ruleProvider?: ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider,\r\n      mapperProvider?: ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider,\r\n      writerProvider?: ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider,\r\n      serverProvider?: ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider,\r\n    }\r\n  ): ModuleWithProviders<LoggerModule> {\r\n    if (!customProvider) {\r\n      customProvider = {}\r\n    }\r\n\r\n    // default config provider\r\n    if (!customProvider.configProvider) {\r\n      customProvider.configProvider = { provide: TOKEN_LOGGER_CONFIG, useValue: config || {} };\r\n    } else {\r\n      // if the user provided its own config, we just make sure the injection token is correct\r\n      if (customProvider.configProvider.provide !== TOKEN_LOGGER_CONFIG) {\r\n        throw new Error(`Wrong injection token for configProvider, it should be ${TOKEN_LOGGER_CONFIG} and you used ${customProvider.configProvider.provide}`);\r\n      }\r\n    }\r\n\r\n    // default configEngine provider\r\n    if (!customProvider.configEngineFactoryProvider) {\r\n      customProvider.configEngineFactoryProvider = { provide: TOKEN_LOGGER_CONFIG_ENGINE_FACTORY, useClass: NGXLoggerConfigEngineFactory };\r\n    } else {\r\n      // if the user provided its own configEngineFactory, we just make sure the injection token is correct\r\n      if (customProvider.configEngineFactoryProvider.provide !== TOKEN_LOGGER_CONFIG_ENGINE_FACTORY) {\r\n        throw new Error(`Wrong injection token for configEngineFactoryProvider, it should be '${TOKEN_LOGGER_CONFIG_ENGINE_FACTORY}' and you used '${customProvider.configEngineFactoryProvider.provide}'`);\r\n      }\r\n    }\r\n\r\n    // default metadata provider\r\n    if (!customProvider.metadataProvider) {\r\n      customProvider.metadataProvider = { provide: TOKEN_LOGGER_METADATA_SERVICE, useClass: NGXLoggerMetadataService };\r\n    } else {\r\n      // if the user provided its own metadataService, we just make sure the injection token is correct\r\n      if (customProvider.metadataProvider.provide !== TOKEN_LOGGER_METADATA_SERVICE) {\r\n        throw new Error(`Wrong injection token for metadataProvider, it should be '${TOKEN_LOGGER_METADATA_SERVICE}' and you used '${customProvider.metadataProvider.provide}'`);\r\n      }\r\n    }\r\n\r\n    // default rule provider\r\n    if (!customProvider.ruleProvider) {\r\n      customProvider.ruleProvider = { provide: TOKEN_LOGGER_RULES_SERVICE, useClass: NGXLoggerRulesService };\r\n    } else {\r\n      // if the user provided its own ruleService, we just make sure the injection token is correct\r\n      if (customProvider.ruleProvider.provide !== TOKEN_LOGGER_RULES_SERVICE) {\r\n        throw new Error(`Wrong injection token for ruleProvider, it should be '${TOKEN_LOGGER_RULES_SERVICE}' and you used '${customProvider.ruleProvider.provide}'`);\r\n      }\r\n    }\r\n\r\n    // default mapper provider\r\n    if (!customProvider.mapperProvider) {\r\n      customProvider.mapperProvider = { provide: TOKEN_LOGGER_MAPPER_SERVICE, useClass: NGXLoggerMapperService };\r\n    } else {\r\n      // if the user provided its own mapperService, we just make sure the injection token is correct\r\n      if (customProvider.mapperProvider.provide !== TOKEN_LOGGER_MAPPER_SERVICE) {\r\n        throw new Error(`Wrong injection token for mapperProvider, it should be '${TOKEN_LOGGER_MAPPER_SERVICE}' and you used '${customProvider.mapperProvider.provide}'`);\r\n      }\r\n    }\r\n\r\n    // default writer provider\r\n    if (!customProvider.writerProvider) {\r\n      customProvider.writerProvider = { provide: TOKEN_LOGGER_WRITER_SERVICE, useClass: NGXLoggerWriterService };\r\n    } else {\r\n      // if the user provided its own writerService, we just make sure the injection token is correct\r\n      if (customProvider.writerProvider.provide !== TOKEN_LOGGER_WRITER_SERVICE) {\r\n        throw new Error(`Wrong injection token for writerProvider, it should be '${TOKEN_LOGGER_WRITER_SERVICE}' and you used '${customProvider.writerProvider.provide}'`);\r\n      }\r\n    }\r\n\r\n    // default server provider\r\n    if (!customProvider.serverProvider) {\r\n      customProvider.serverProvider = { provide: TOKEN_LOGGER_SERVER_SERVICE, useClass: NGXLoggerServerService };\r\n    } else {\r\n      // if the user provided its own serverService, we just make sure the injection token is correct\r\n      if (customProvider.serverProvider.provide !== TOKEN_LOGGER_SERVER_SERVICE) {\r\n        throw new Error(`Wrong injection token for serverProvider, it should be '${TOKEN_LOGGER_SERVER_SERVICE}' and you used '${customProvider.writerProvider.provide}'`);\r\n      }\r\n    }\r\n\r\n    return {\r\n      ngModule: LoggerModule,\r\n      providers: [\r\n        NGXLogger,\r\n        customProvider.configProvider,\r\n        customProvider.configEngineFactoryProvider,\r\n        customProvider.metadataProvider,\r\n        customProvider.ruleProvider,\r\n        customProvider.mapperProvider,\r\n        customProvider.writerProvider,\r\n        customProvider.serverProvider,\r\n        CustomNGXLoggerService,\r\n      ]\r\n    };\r\n  }\r\n\r\n  static forChild(): ModuleWithProviders<LoggerModule> {\r\n    // todo : this forChild is useless for now because nothing is different from forRoot.\r\n    // This should be implemented so that user can change the providers in the forChild\r\n    return {\r\n      ngModule: LoggerModule,\r\n    };\r\n  }\r\n}\r\n","/*\r\n * Public API Surface of ngx-logger\r\n */\r\n\r\nexport * from './lib/logger.barrel';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["of","vlq.decode","HttpRequest","filter","HttpResponse","map","retry","shareReplay","catchError","Injectable","Optional","HttpHeaders","HttpParams","throwError","NgxLoggerLevel","isPlatformBrowser","PLATFORM_ID","Inject","take","CommonModule","NgModule"],"mappings":"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"}