import { INGXLoggerMetadata } from '../metadata/imetadata';
import { INGXLoggerConfig } from '../config/iconfig';
import { INGXLoggerWriterService } from './iwriter.service';
import * as i0 from "@angular/core";
export declare class NGXLoggerWriterService implements INGXLoggerWriterService {
    protected platformId: any;
    protected readonly isIE: boolean;
    protected readonly logFunc: (metadata: INGXLoggerMetadata, config: INGXLoggerConfig, metaString: string) => void;
    /** List of functions called when preparing meta string */
    protected prepareMetaStringFuncs: ((metadata: INGXLoggerMetadata, config: INGXLoggerConfig) => string)[];
    constructor(platformId: any);
    protected getTimestampToWrite(metadata: INGXLoggerMetadata, config: INGXLoggerConfig): string;
    protected getLevelToWrite(metadata: INGXLoggerMetadata, config: INGXLoggerConfig): string;
    protected getFileDetailsToWrite(metadata: INGXLoggerMetadata, config: INGXLoggerConfig): string;
    protected getContextToWrite(metadata: INGXLoggerMetadata, config: INGXLoggerConfig): string;
    /** Generate a "meta" string that is displayed before the content sent to the log function */
    protected prepareMetaString(metadata: INGXLoggerMetadata, config: INGXLoggerConfig): string;
    /** Get the color to use when writing to console */
    protected getColor(metadata: INGXLoggerMetadata, config: INGXLoggerConfig): string | undefined;
    /** Log to the console specifically for IE */
    protected logIE(metadata: INGXLoggerMetadata, config: INGXLoggerConfig, metaString: string): void;
    /** Log to the console */
    protected logModern(metadata: INGXLoggerMetadata, config: INGXLoggerConfig, metaString: string): void;
    /** Write the content sent to the log function to the console */
    writeMessage(metadata: INGXLoggerMetadata, config: INGXLoggerConfig): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<NGXLoggerWriterService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<NGXLoggerWriterService>;
}
//# sourceMappingURL=writer.service.d.ts.map