import { HttpHeaders, HttpParams } from '@angular/common/http';
import { INGXLoggerConfig, INGXLoggerMonitor, NgxLoggerLevel } from 'ngx-logger';
import * as i0 from "@angular/core";
export declare class NGXLoggerMock {
    get level(): NgxLoggerLevel;
    get serverLogLevel(): NgxLoggerLevel;
    trace(message?: any | (() => any), ...additional: any[]): void;
    debug(message?: any | (() => any), ...additional: any[]): void;
    info(message?: any | (() => any), ...additional: any[]): void;
    log(message?: any | (() => any), ...additional: any[]): void;
    warn(message?: any | (() => any), ...additional: any[]): void;
    error(message?: any | (() => any), ...additional: any[]): void;
    fatal(message?: any | (() => any), ...additional: any[]): void;
    partialUpdateConfig(partialConfig: Partial<INGXLoggerConfig>): void;
    updateConfig(config: any): void;
    setCustomHttpHeaders(headers: HttpHeaders): void;
    setCustomParams(params: HttpParams): void;
    registerMonitor(monitor: INGXLoggerMonitor): void;
    setWithCredentialsOptionValue(withCredentials: boolean): void;
    getConfigSnapshot(): INGXLoggerConfig;
    static ɵfac: i0.ɵɵFactoryDeclaration<NGXLoggerMock, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<NGXLoggerMock>;
}
//# sourceMappingURL=logger.service.mock.d.ts.map