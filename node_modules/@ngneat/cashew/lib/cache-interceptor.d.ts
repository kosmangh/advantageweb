import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';
import { Observable } from 'rxjs';
import { HttpCacheConfig } from './cache-config';
import { HttpCacheManager } from './cache-manager.service';
import { KeySerializer } from './key-serializer';
import * as i0 from "@angular/core";
export declare class HttpCacheInterceptor implements HttpInterceptor {
    private httpCacheManager;
    private keySerializer;
    private platformId;
    private config;
    constructor(httpCacheManager: HttpCacheManager, keySerializer: KeySerializer, platformId: Object, config: HttpCacheConfig);
    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>>;
    static ɵfac: i0.ɵɵFactoryDeclaration<HttpCacheInterceptor, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<HttpCacheInterceptor>;
}
