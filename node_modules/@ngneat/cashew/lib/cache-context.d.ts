import { HttpContext, HttpContextToken, HttpRequest, HttpResponse } from '@angular/common/http';
import { Observable } from 'rxjs';
import { CacheBucket } from './cache-bucket';
import { HttpCacheConfig } from './cache-config';
export interface ContextOptions {
    cache?: boolean;
    ttl?: number;
    key?: string | ((request: HttpRequest<any>) => string);
    bucket?: CacheBucket;
    version?: string;
    clearCachePredicate?<T>(previousRequest: HttpRequest<T> | undefined, currentRequest: HttpRequest<T>, key: string): boolean;
    context?: HttpContext;
    mode?: HttpCacheConfig['mode'];
    returnSource?: Observable<HttpResponse<any>>;
}
export declare const CACHE_CONTEXT: HttpContextToken<ContextOptions>;
export declare function withCache(options?: ContextOptions): HttpContext;
