import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';
import { ExistingProvider } from '@angular/core';
import { Observable } from 'rxjs';
import * as i0 from "@angular/core";
export declare class PendingRequestsInterceptor implements HttpInterceptor {
    private _pendingRequests;
    private _pendingRequestsStatus$;
    private _filteredUrlPatterns;
    private _filteredMethods;
    private _filteredHeaders;
    private _forceByPass;
    get pendingRequestsStatus$(): Observable<boolean>;
    get pendingRequests(): number;
    get filteredUrlPatterns(): RegExp[];
    set filteredMethods(httpMethods: string[]);
    set filteredHeaders(value: string[]);
    set forceByPass(value: boolean);
    private shouldBypassUrl;
    private shouldBypassMethod;
    private shouldBypassHeader;
    private shouldBypass;
    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>>;
    static ɵfac: i0.ɵɵFactoryDeclaration<PendingRequestsInterceptor, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<PendingRequestsInterceptor>;
}
export declare const PendingRequestsInterceptorProvider: ExistingProvider[];
