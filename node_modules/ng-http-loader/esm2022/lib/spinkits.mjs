/*
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
 * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
 * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
 * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
import { SkChasingDotsComponent } from './components/sk-chasing-dots/sk-chasing-dots.component';
import { SkCubeGridComponent } from './components/sk-cube-grid/sk-cube-grid.component';
import { SkDoubleBounceComponent } from './components/sk-double-bounce/sk-double-bounce.component';
import { SkRotatingPlaneComponent } from './components/sk-rotating-plane/sk-rotating-plane.component';
import { SkSpinnerPulseComponent } from './components/sk-spinner-pulse/sk-spinner-pulse.component';
import { SkThreeBounceComponent } from './components/sk-three-bounce/sk-three-bounce.component';
import { SkWanderingCubesComponent } from './components/sk-wandering-cubes/sk-wandering-cubes.component';
import { SkWaveComponent } from './components/sk-wave/sk-wave.component';
export const Spinkit = {
    skChasingDots: 'sk-chasing-dots',
    skCubeGrid: 'sk-cube-grid',
    skDoubleBounce: 'sk-double-bounce',
    skRotatingPlane: 'sk-rotationg-plane',
    skSpinnerPulse: 'sk-spinner-pulse',
    skThreeBounce: 'sk-three-bounce',
    skWanderingCubes: 'sk-wandering-cubes',
    skWave: 'sk-wave'
};
export const SPINKIT_COMPONENTS = [
    SkCubeGridComponent,
    SkChasingDotsComponent,
    SkDoubleBounceComponent,
    SkRotatingPlaneComponent,
    SkSpinnerPulseComponent,
    SkThreeBounceComponent,
    SkWanderingCubesComponent,
    SkWaveComponent,
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3BpbmtpdHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvbGliL3NwaW5raXRzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7O0dBT0c7QUFFSCxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSx3REFBd0QsQ0FBQztBQUNoRyxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxrREFBa0QsQ0FBQztBQUN2RixPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSwwREFBMEQsQ0FBQztBQUNuRyxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSw0REFBNEQsQ0FBQztBQUN0RyxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSwwREFBMEQsQ0FBQztBQUNuRyxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSx3REFBd0QsQ0FBQztBQUNoRyxPQUFPLEVBQUUseUJBQXlCLEVBQUUsTUFBTSw4REFBOEQsQ0FBQztBQUN6RyxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sd0NBQXdDLENBQUM7QUFFekUsTUFBTSxDQUFDLE1BQU0sT0FBTyxHQUFHO0lBQ25CLGFBQWEsRUFBRSxpQkFBaUI7SUFDaEMsVUFBVSxFQUFFLGNBQWM7SUFDMUIsY0FBYyxFQUFFLGtCQUFrQjtJQUNsQyxlQUFlLEVBQUUsb0JBQW9CO0lBQ3JDLGNBQWMsRUFBRSxrQkFBa0I7SUFDbEMsYUFBYSxFQUFFLGlCQUFpQjtJQUNoQyxnQkFBZ0IsRUFBRSxvQkFBb0I7SUFDdEMsTUFBTSxFQUFFLFNBQVM7Q0FDcEIsQ0FBQztBQUVGLE1BQU0sQ0FBQyxNQUFNLGtCQUFrQixHQUFHO0lBQzlCLG1CQUFtQjtJQUNuQixzQkFBc0I7SUFDdEIsdUJBQXVCO0lBQ3ZCLHdCQUF3QjtJQUN4Qix1QkFBdUI7SUFDdkIsc0JBQXNCO0lBQ3RCLHlCQUF5QjtJQUN6QixlQUFlO0NBQ2xCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTUyBPUlxuICogSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJVFksIEZJVE5FU1NcbiAqIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTiBOTyBFVkVOVCBTSEFMTCBUSEUgQVVUSE9SUyBPUlxuICogQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sIERBTUFHRVMgT1IgT1RIRVIgTElBQklMSVRZLCBXSEVUSEVSXG4gKiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1IgT1RIRVJXSVNFLCBBUklTSU5HIEZST00sIE9VVCBPRiBPUiBJTlxuICogQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEUgVVNFIE9SIE9USEVSIERFQUxJTkdTIElOIFRIRSBTT0ZUV0FSRS5cbiAqL1xuXG5pbXBvcnQgeyBTa0NoYXNpbmdEb3RzQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL3NrLWNoYXNpbmctZG90cy9zay1jaGFzaW5nLWRvdHMuY29tcG9uZW50JztcbmltcG9ydCB7IFNrQ3ViZUdyaWRDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvc2stY3ViZS1ncmlkL3NrLWN1YmUtZ3JpZC5jb21wb25lbnQnO1xuaW1wb3J0IHsgU2tEb3VibGVCb3VuY2VDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvc2stZG91YmxlLWJvdW5jZS9zay1kb3VibGUtYm91bmNlLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBTa1JvdGF0aW5nUGxhbmVDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvc2stcm90YXRpbmctcGxhbmUvc2stcm90YXRpbmctcGxhbmUuY29tcG9uZW50JztcbmltcG9ydCB7IFNrU3Bpbm5lclB1bHNlQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL3NrLXNwaW5uZXItcHVsc2Uvc2stc3Bpbm5lci1wdWxzZS5jb21wb25lbnQnO1xuaW1wb3J0IHsgU2tUaHJlZUJvdW5jZUNvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy9zay10aHJlZS1ib3VuY2Uvc2stdGhyZWUtYm91bmNlLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBTa1dhbmRlcmluZ0N1YmVzQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL3NrLXdhbmRlcmluZy1jdWJlcy9zay13YW5kZXJpbmctY3ViZXMuY29tcG9uZW50JztcbmltcG9ydCB7IFNrV2F2ZUNvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy9zay13YXZlL3NrLXdhdmUuY29tcG9uZW50JztcblxuZXhwb3J0IGNvbnN0IFNwaW5raXQgPSB7XG4gICAgc2tDaGFzaW5nRG90czogJ3NrLWNoYXNpbmctZG90cycsXG4gICAgc2tDdWJlR3JpZDogJ3NrLWN1YmUtZ3JpZCcsXG4gICAgc2tEb3VibGVCb3VuY2U6ICdzay1kb3VibGUtYm91bmNlJyxcbiAgICBza1JvdGF0aW5nUGxhbmU6ICdzay1yb3RhdGlvbmctcGxhbmUnLFxuICAgIHNrU3Bpbm5lclB1bHNlOiAnc2stc3Bpbm5lci1wdWxzZScsXG4gICAgc2tUaHJlZUJvdW5jZTogJ3NrLXRocmVlLWJvdW5jZScsXG4gICAgc2tXYW5kZXJpbmdDdWJlczogJ3NrLXdhbmRlcmluZy1jdWJlcycsXG4gICAgc2tXYXZlOiAnc2std2F2ZSdcbn07XG5cbmV4cG9ydCBjb25zdCBTUElOS0lUX0NPTVBPTkVOVFMgPSBbXG4gICAgU2tDdWJlR3JpZENvbXBvbmVudCxcbiAgICBTa0NoYXNpbmdEb3RzQ29tcG9uZW50LFxuICAgIFNrRG91YmxlQm91bmNlQ29tcG9uZW50LFxuICAgIFNrUm90YXRpbmdQbGFuZUNvbXBvbmVudCxcbiAgICBTa1NwaW5uZXJQdWxzZUNvbXBvbmVudCxcbiAgICBTa1RocmVlQm91bmNlQ29tcG9uZW50LFxuICAgIFNrV2FuZGVyaW5nQ3ViZXNDb21wb25lbnQsXG4gICAgU2tXYXZlQ29tcG9uZW50LFxuXTtcbiJdfQ==