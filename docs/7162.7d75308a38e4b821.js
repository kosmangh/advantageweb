"use strict";(self.webpackChunkadvantageweb=self.webpackChunkadvantageweb||[]).push([[7162],{5109:(g,d,i)=>{i.d(d,{V:()=>o});class o{}},8397:(g,d,i)=>{i.d(d,{w:()=>o});class o{constructor(){this.occupiedProps=!1}}},8143:(g,d,i)=>{i.d(d,{Z:()=>o});class o{}},1449:(g,d,i)=>{i.d(d,{g:()=>c});var o=i(5178),e=i(553),p=i(8143),n=i(9862),u=i(5109),l=i(8397),r=i(995),I=i(7587),E=i(5879),R=i(7467),N=i(7236);let c=(()=>{var h;class T{constructor(t,a,s){this.utilsService=t,this.http=a,this.logger=s,this.SETTINGS="/settings/"}createData(t){return(new n.WM).set("Content-Type","application/json"),this.http.post(`${e.N.mock_url}/data`,t).pipe((0,o.V)(e.N.timeout))}saveZone(t,a){return a.headerRequest=this.utilsService.getRequestHeader(t.zoneId,t.regionId,"CREATE_ZONE"),a.createdBy=t.username,this.logger.info("save zone request "+JSON.stringify(a)),this.http.post(`${e.N.url+r.h.API_SETTINGS}savezone`,a).pipe((0,o.V)(e.N.timeout))}updateZone(t,a){return a.headerRequest=this.utilsService.getRequestHeader(t.zoneId,t.regionId,"UPDATE_ZONE"),a.lastModifiedBy=t.username,this.logger.info("update zone request "+JSON.stringify(a)),this.http.post(`${e.N.url+r.h.API_SETTINGS}updatezone`,a).pipe((0,o.V)(e.N.timeout))}deleteZone(t,a){const s=new u.V;return s.recordId=a,s.deletedBy=t.username,s.headerRequest=this.utilsService.getRequestHeader(t.zoneId,t.regionId,"DELETE_ZONE"),this.logger.info("delete zone request "+JSON.stringify(s)),this.http.post(`${e.N.url+r.h.API_SETTINGS}deletezone`,s).pipe((0,o.V)(e.N.timeout))}getZones(){const t=new p.Z;return t.headerRequest=this.utilsService.getRequestHeader("","","ZONE_LIST"),this.logger.info("zone list request "+JSON.stringify(t)),this.http.post(`${e.N.url+r.h.API_SETTINGS}zones`,t).pipe((0,o.V)(e.N.timeout))}getRegions(){const t=new p.Z;return t.headerRequest=this.utilsService.getRequestHeader("ALL","ALL","REGION_LIST"),this.logger.info("regions request "+JSON.stringify(t)),this.http.post(`${e.N.url+r.h.API_SETTINGS}regions`,t,{context:(0,I.DN)()}).pipe((0,o.V)(e.N.timeout))}createRegion(t,a){return a.createdBy=t.username,a.headerRequest=this.utilsService.getRequestHeader(t.zoneId,t.regionId,"CREATE_REGION"),this.logger.info("save zone request "+JSON.stringify(a)),this.http.post(`${e.N.url+r.h.API_SETTINGS}createregion`,a).pipe((0,o.V)(e.N.timeout))}updateRegion(t,a){return a.lastModifiedBy=t.username,a.headerRequest=this.utilsService.getRequestHeader(t.zoneId,t.regionId,"UPDATE_REGION"),this.logger.info("update zone request "+JSON.stringify(a)),this.http.post(`${e.N.url+r.h.API_SETTINGS}updateregion`,a).pipe((0,o.V)(e.N.timeout))}deleteRegion(t,a){const s=new u.V;return s.recordId=a,s.deletedBy=t.username,s.headerRequest=this.utilsService.getRequestHeader(t.zoneId,t.regionId,"DELETE_REGION"),this.logger.info("update zone request "+JSON.stringify(s)),this.http.post(`${e.N.url+r.h.API_SETTINGS}updateregion`,s).pipe((0,o.V)(e.N.timeout))}getEstates(){const t=new l.w;return t.searchBy="ALL",t.searchValue="",t.headerRequest=this.utilsService.getRequestHeader("currentUser.zoneId,","currentUser.regionId","STAFFS_LIST"),this.logger.info("estate list request "+JSON.stringify(t)),this.http.post(`${e.N.url+r.h.API_SETTINGS}estates`,t).pipe((0,o.V)(e.N.timeout))}createEstate(t,a){return a.headerRequest=this.utilsService.getRequestHeader(t.zoneId,t.regionId,"CREATE_ESTATE"),this.logger.info("create zone request "+JSON.stringify(a)),this.http.post(`${e.N.mock_url+r.h.API_SETTINGS}createestate`,a).pipe((0,o.V)(e.N.timeout))}updateEstate(t,a){return a.headerRequest=this.utilsService.getRequestHeader(t.zoneId,t.regionId,"UPDATE_ESTATE"),this.logger.info("update zone request "+JSON.stringify(a)),this.http.post(`${e.N.mock_url+r.h.API_SETTINGS}updateestate`,a).pipe((0,o.V)(e.N.timeout))}deleteEstate(t,a){const s=new u.V;return s.recordId=a,s.headerRequest=this.utilsService.getRequestHeader(t.zoneId,t.regionId,"DELETE_ESTATE"),this.logger.info("delete zone request "+JSON.stringify(s)),this.http.post(`${e.N.mock_url+r.h.API_SETTINGS}deleteestate`,s).pipe((0,o.V)(e.N.timeout))}getEstateBlocks(t,a){const s=new l.w;return s.searchBy="estate.recordId",s.searchValue=a,s.headerRequest=this.utilsService.getRequestHeader(t.zoneId,t.regionId,"ESTATE_BLOCK_LIST"),this.logger.info("estate block list request "+JSON.stringify(s)),this.http.post(`${e.N.url+r.h.API_SETTINGS}estateblocks`,s).pipe((0,o.V)(e.N.timeout))}createEstateBlock(t,a){return a.createdBy=t.username,a.recordId=a.estateId+"/"+a.block,a.headerRequest=this.utilsService.getRequestHeader(t.zoneId,t.regionId,"CREATE_ESTATE_BLOCK"),this.logger.info("create estate block request "+JSON.stringify(a)),this.http.post(`${e.N.url+r.h.API_SETTINGS}createblock`,a).pipe((0,o.V)(e.N.timeout))}updateEstateBlock(t,a){return a.headerRequest=this.utilsService.getRequestHeader(t.zoneId,t.regionId,"UPDATE_ESTATE_BLOCK"),a.lastModifiedBy=t.username,this.logger.info("update estate block request "+JSON.stringify(a)),this.http.post(`${e.N.url+r.h.API_SETTINGS}updateblock`,a).pipe((0,o.V)(e.N.timeout))}deleteEstateBlock(t,a){const s=new u.V;return s.recordId=a,s.headerRequest=this.utilsService.getRequestHeader(t.zoneId,t.regionId,"DELETE_ESTATE_BLOCK"),this.logger.info("delete estate block request "+JSON.stringify(s)),this.http.post(`${e.N.url+r.h.API_SETTINGS}deleteblock`,s).pipe((0,o.V)(e.N.timeout))}getEstateProperties(t,a,s,L){const _=new l.w;return _.searchBy="estateBlock.recordId",_.searchValue=a,_.occupiedProps=s,_.occupationType=L,_.headerRequest=this.utilsService.getRequestHeader(t.zoneId,t.regionId,"ESTATE_PROPERTY_LIST"),this.logger.info("estate properties list request "+JSON.stringify(_)),this.http.post(`${e.N.url+r.h.API_SETTINGS}estateproperties`,_).pipe((0,o.V)(e.N.timeout))}createEstateProperty(t,a){return a.createdBy=t.username,a.recordId=a.estateId+"-"+a.blockId+"-"+a.propertyNo,a.headerRequest=this.utilsService.getRequestHeader(t.zoneId,t.regionId,"CREATE_PROPERTY_BLOCK"),this.logger.info("create estate property request "+JSON.stringify(a)),this.http.post(`${e.N.url+r.h.API_SETTINGS}createproperty`,a).pipe((0,o.V)(e.N.timeout))}updateEstateProperty(t,a){return a.lastModifiedBy=t.username,a.headerRequest=this.utilsService.getRequestHeader(t.zoneId,t.regionId,"UPDATE_PROPERTY_BLOCK"),this.logger.info("update estate property request "+JSON.stringify(a)),this.http.post(`${e.N.url+r.h.API_SETTINGS}updateproperty`,a).pipe((0,o.V)(e.N.timeout))}deleteEstateProperty(t,a){const s=new u.V;return s.recordId=a,s.headerRequest=this.utilsService.getRequestHeader(t.zoneId,t.regionId,"DELETE_PROPERTY_BLOCK"),this.logger.info("delete estate property request "+JSON.stringify(s)),this.http.post(`${e.N.url+r.h.API_SETTINGS}deleteproperty`,s).pipe((0,o.V)(e.N.timeout))}getEstateClass(){return[{dataValue:"FIRST_CLASS",dataLabel:"First Class"},{dataValue:"SECOND_CLASS",dataLabel:"Second Class"},{dataValue:"THIRD_CLASS",dataLabel:"Third Class"}]}getGender(){return[{dataValue:"MALE",dataLabel:"Male"},{dataValue:"FEMALE",dataLabel:"Female"}]}getStatus(){return[{dataValue:"ACTIVE",dataLabel:"Active"},{dataValue:"INACTIVE",dataLabel:"Inactive"}]}getMaritalStatus(){return[{dataValue:"SINGLE",dataLabel:"Single"},{dataValue:"MARRIED",dataLabel:"Married"},{dataValue:"DIVORCED",dataLabel:"Divorced"},{dataValue:"OTHERS",dataLabel:"Others"}]}getRelationships(){return[{dataValue:"FATHER",dataLabel:"Father"},{dataValue:"MOTHER",dataLabel:"Mother"},{dataValue:"GUARDIAN",dataLabel:"Guardian"},{dataValue:"OTHERS",dataLabel:"Others"}]}getIdTypes(){return[{dataValue:"NATIONAL_PASSPORT",dataLabel:"National Passport"},{dataValue:"NATIONAL_HEALTH_INSURANCE",dataLabel:"National Health Insurance"},{dataValue:"VOTERS_ID",dataLabel:"Voters Id"},{dataValue:"DRIVERS_LICENCE",dataLabel:"Drivers Licence"}]}getPropertyCategories(){return[{dataValue:"LAND",dataLabel:"Land"},{dataValue:"HOUSE",dataLabel:"House"}]}getOccupantType(){return[{dataValue:"LESSEE",dataLabel:"Lessee"},{dataValue:"TENANT",dataLabel:"Tenant"}]}getOccupationType(){return[{dataValue:"Leasehold",dataLabel:"Leasehold"},{dataValue:"Rental",dataLabel:"Rental"}]}getPropertyUsage(){return[{dataValue:"RESIDENTIAL",dataLabel:"Residential"},{dataValue:"COMMERCIAL",dataLabel:"Commercial"},{dataValue:"INSTITUTIONAL",dataLabel:"Institutional"},{dataValue:"MIXED_USE",dataLabel:"Mixed Use"},{dataValue:"ALL",dataLabel:"All"}]}getModeOfPayments(){return[{dataValue:"CASH",dataLabel:"Cash"},{dataValue:"MOBILE_MONEY",dataLabel:"Mobile Money"},{dataValue:"CHEQUE",dataLabel:"Cheque"},{dataValue:"BANKERS_DRAFT",dataLabel:"Bankers Draft"}]}getGroupRentBillTypes(){return[{dataValue:"EST",dataLabel:"Estate"},{dataValue:"BLK",dataLabel:"Block"},{dataValue:"PRO",dataLabel:"Property"}]}getUserRoles(){return[{dataValue:"ADMINISTRATOR",dataLabel:"Administrator"},{dataValue:"DIRECTOR",dataLabel:"Director"},{dataValue:"ESTATE_OFFICER",dataLabel:"Estate Officer"},{dataValue:"ACCOUNTANT",dataLabel:"Accountant"},{dataValue:"AUDITOR",dataLabel:"Auditor"}]}getDepartments(){return[{dataValue:"ADMINISTRATION",dataLabel:"Administration"},{dataValue:"ESTATE_OFFICE",dataLabel:"Estate Office"},{dataValue:"FINANCE",dataLabel:"Finance"},{dataValue:"COMPLIANCE",dataLabel:"Compliance"}]}getGhanaRegions(){return[{dataValue:"AHAFO_REGION",dataLabel:"Ahafo Region"},{dataValue:"ASHANTI_REGION",dataLabel:"Ashanti Region"},{dataValue:"BONO_EAST_REGION",dataLabel:"Bono East Region"},{dataValue:"BONO_REGION",dataLabel:"Bono Region"},{dataValue:"CENTRAL_REGION",dataLabel:"Central Region"},{dataValue:"EASTERN_REGION",dataLabel:"Eastern Region"},{dataValue:"GREATER_ACCRA",dataLabel:"Greater Accra"},{dataValue:"NORTHERN_REGION",dataLabel:"Northern Region"},{dataValue:"NORTH_EAST_REGION",dataLabel:"North East Region"},{dataValue:"OTI_REGION",dataLabel:"Oti Region"},{dataValue:"UPPER_EAST_REGION",dataLabel:"Upper East Region"},{dataValue:"UPPER_WEST_REGION",dataLabel:"Upper West Region"},{dataValue:"WESTERN_REGION",dataLabel:"Western Region"},{dataValue:"WESTERN_NORTH_REGION",dataLabel:"Western North Region"},{dataValue:"SAVANNAH_REGION",dataLabel:"Volta Region"},{dataValue:"VOLTA_REGION",dataLabel:"Volta Region"}]}}return(h=T).\u0275fac=function(t){return new(t||h)(E.LFG(R.F),E.LFG(n.eN),E.LFG(N.Kf))},h.\u0275prov=E.Yz7({token:h,factory:h.\u0275fac,providedIn:"root"}),T})()},2735:(g,d,i)=>{i.d(d,{h:()=>u});var o=i(6814),e=i(5879);function p(l,r){1&l&&(e.TgZ(0,"span")(1,"span",2),e._uU(2," * "),e.qZA()())}function n(l,r){1&l&&(e.TgZ(0,"span")(1,"span",3),e._uU(2,"(optional)"),e.qZA()())}let u=(()=>{var l;class r{constructor(){this.showRequired=!0}ngOnInit(){}}return(l=r).\u0275fac=function(E){return new(E||l)},l.\u0275cmp=e.Xpm({type:l,selectors:[["app-form-label"]],inputs:{labelName:"labelName",labelForName:"labelForName",showRequired:"showRequired"},standalone:!0,features:[e.jDz],decls:4,vars:4,consts:[[1,"form-label",3,"for"],[4,"ngIf"],[1,"text-danger"],[1,"sub-text-sm","text-primary"]],template:function(E,R){1&E&&(e.TgZ(0,"label",0),e._uU(1),e.YNc(2,p,3,0,"span",1),e.YNc(3,n,3,0,"span",1),e.qZA()),2&E&&(e.s9C("for",R.labelForName),e.xp6(1),e.hij(" ",R.labelName," "),e.xp6(1),e.Q6J("ngIf",R.showRequired),e.xp6(1),e.Q6J("ngIf",!R.showRequired))},dependencies:[o.ez,o.O5],encapsulation:2}),r})()},1693:(g,d,i)=>{i.d(d,{M:()=>p});var o=i(6814),e=i(5879);let p=(()=>{var n;class u{}return(n=u).\u0275fac=function(r){return new(r||n)},n.\u0275cmp=e.Xpm({type:n,selectors:[["app-required-field"]],standalone:!0,features:[e.jDz],decls:2,vars:0,consts:[[1,"icon","ni","ni-cross-circle","fs-12px"]],template:function(r,I){1&r&&(e._UZ(0,"em",0),e._uU(1," This field is required "))},dependencies:[o.ez],encapsulation:2}),u})()},3221:(g,d,i)=>{i.d(d,{z:()=>p});var o=i(6814),e=i(5879);let p=(()=>{var n;class u{constructor(){}ngOnInit(){}}return(n=u).\u0275fac=function(r){return new(r||n)},n.\u0275cmp=e.Xpm({type:n,selectors:[["app-required-fields-notice"]],standalone:!0,features:[e.jDz],decls:6,vars:0,consts:[[1,"badge","badge-dot","bg-primary","fs-13"],[1,"text-danger","fw-bold","fs-16px"]],template:function(r,I){1&r&&(e.TgZ(0,"span",0)(1,"span"),e._uU(2,"All fields marked "),e.TgZ(3,"span",1),e._uU(4," * "),e.qZA(),e._uU(5,"required! "),e.qZA()())},dependencies:[o.ez],encapsulation:2}),u})()}}]);